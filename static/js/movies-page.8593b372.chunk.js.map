{"version":3,"file":"static/js/movies-page.8593b372.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","API/getSearchMoviesApi.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/MoviesPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { accentTextColor, mainTextColor } from 'utilities/variables/css';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  margin: 10px;\n\n  width: calc((100% - 6 * 10px) / 3);\n`;\n\nexport const Title = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n\n  color: ${accentTextColor};\n\n  width: 300px;\n  margin-bottom: 15px;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  margin-bottom: 15px;\n`;\n\nexport const VoteWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n`;\n\nexport const VoteAverage = styled.p`\n  color: ${mainTextColor};\n`;\n\nexport const VoteCount = styled.p`\n  color: ${mainTextColor};\n`;\n\nexport const Value = styled.span`\n  font-weight: 700;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport posterBg from '../../utilities/images/poster.png';\nimport {\n  Item,\n  Title,\n  Poster,\n  VoteWrapper,\n  VoteAverage,\n  VoteCount,\n  Value,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ id, title, poster, voteAverage, voteCount }) => {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <Title>{title ? title : 'Movie without a title'}</Title>\n        <Poster src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : posterBg} alt={title} />\n        <VoteWrapper>\n          <VoteAverage>\n            Vote average: <Value>{voteAverage}</Value>\n          </VoteAverage>\n          <VoteCount>\n            Vote count:<Value> {voteCount}</Value>\n          </VoteCount>\n        </VoteWrapper>\n      </Link>\n    </Item>\n  );\n};\n\nMovieCard.prototype = {\n  id: propTypes.number,\n  title: propTypes.string,\n  poster: propTypes.string,\n  voteAverage: propTypes.number,\n  voteCount: propTypes.number,\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: -10px;\n`;\n","import propTypes from 'prop-types';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { Wrapper } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <Wrapper>\n      {movies.map(({ id, title, poster, voteAverage, voteCount }) => {\n        return (\n          <MovieCard\n            key={id}\n            id={id}\n            title={title}\n            poster={poster}\n            voteAverage={voteAverage}\n            voteCount={voteCount}\n          />\n        );\n      })}\n    </Wrapper>\n  );\n};\n\nMoviesList.prototype = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      title: propTypes.string,\n      poster: propTypes.string,\n      voteAverage: propTypes.number,\n      voteCount: propTypes.number,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","const getSearchMoviesApi = async (query, page = 1) => {\n  const key = '32abbe5f20cc57659aefd6abb0b04352';\n  const url = `https://api.themoviedb.org/3/search/movie`;\n  const filter = `?api_key=${key}&query=${query}&language=en-US&page=${page}&include_adult=false`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n\nexport default getSearchMoviesApi;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import styled from '@emotion/styled';\nimport {\n  secondBgColor,\n  secondTextColor,\n  mainHoverEfect,\n  accentBgColor,\n} from 'utilities/variables/css';\n\nexport const FormSearch = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const InputSearch = styled.input`\n  width: 500px;\n  height: 30px;\n\n  padding: 0 10px 0 10px;\n  margin-right: 15px;\n\n  border: 1px solid ${secondBgColor};\n  outline: none;\n`;\n\nexport const ButtonSubmit = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 150px;\n  height: 30px;\n  margin-bottom: 30px;\n\n  font-size: 15px;\n  font-family: inherit;\n\n  background-color: ${secondBgColor};\n  color: ${secondTextColor};\n  border: none;\n\n  cursor: pointer;\n  transition: background-color ${mainHoverEfect}, color ${mainHoverEfect};\n\n  :hover {\n    background-color: ${accentBgColor};\n    color: ${secondTextColor};\n  }\n`;\n","import { useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'components/Container/Container';\nimport { FormSearch, InputSearch, ButtonSubmit } from './SearchBar.styled';\nimport { FaSearch } from 'react-icons/fa';\n\nconst SearchBar = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const value = e.target.elements.query.value;\n\n    navigate({\n      ...location,\n      search: `query=${value}`,\n    });\n  };\n\n  return (\n    <Container>\n      <FormSearch onSubmit={onSubmitForm}>\n        <InputSearch type=\"text\" name=\"query\" />\n        <ButtonSubmit type=\"submit\">\n          <FaSearch />\n        </ButtonSubmit>\n      </FormSearch>\n    </Container>\n  );\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport getSearchMoviesApi from 'API/getSearchMoviesApi';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport Container from 'components/Container/Container';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst MoviesPage = () => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search).get('query') ?? '';\n\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    if (query !== '') {\n      getSearchMoviesApi(query).then(({ results }) => {\n        const moviesArr = [];\n\n        results.map(({ id, original_title, poster_path, vote_average, vote_count }) => {\n          const movie = {\n            id,\n            title: original_title,\n            poster: poster_path,\n            voteAverage: vote_average?.toFixed(2),\n            voteCount: vote_count,\n          };\n\n          return moviesArr.push(movie);\n        });\n\n        setMovies(moviesArr);\n      });\n    }\n  }, [query]);\n\n  return (\n    <>\n      <SearchBar />\n      {movies && (\n        <Container isPadding>\n          <MoviesList movies={movies} />\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["Item","styled","Title","accentTextColor","Poster","VoteWrapper","VoteAverage","mainTextColor","VoteCount","Value","MovieCard","id","title","poster","voteAverage","voteCount","location","useLocation","to","state","from","src","posterBg","alt","prototype","propTypes","Wrapper","MoviesList","movies","map","isRequired","getSearchMoviesApi","query","page","url","filter","fetch","response","json","data","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","FormSearch","InputSearch","secondBgColor","ButtonSubmit","secondTextColor","mainHoverEfect","accentBgColor","navigate","useNavigate","Container","onSubmit","e","preventDefault","elements","search","type","name","URLSearchParams","get","useState","setMovies","useEffect","then","results","moviesArr","original_title","poster_path","vote_average","vote_count","movie","toFixed","isPadding"],"sourceRoot":""}