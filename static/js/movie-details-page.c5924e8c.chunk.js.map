{"version":3,"file":"static/js/movie-details-page.c5924e8c.chunk.js","mappings":"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","sources":["API/getMovieDetailsApi.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.js"],"sourcesContent":["const getMovieDetailsApi = async movieId => {\n  const key = '32abbe5f20cc57659aefd6abb0b04352';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const filter = `?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n\nexport default getMovieDetailsApi;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport {\n  accentBgColor,\n  accentTextColor,\n  mainHoverEfect,\n  mainTextColor,\n  secondBgColor,\n  secondTextColor,\n} from 'utilities/variables/css';\n\nexport const ButtonGoBack = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 200px;\n  height: 40px;\n  margin-bottom: 30px;\n\n  font-size: 15px;\n  font-family: inherit;\n\n  background-color: ${secondBgColor};\n  color: ${secondTextColor};\n  border: none;\n\n  cursor: pointer;\n  transition: background-color ${mainHoverEfect}, color ${mainHoverEfect};\n\n  :hover {\n    background-color: ${accentBgColor};\n    color: ${secondTextColor};\n  }\n`;\n\nexport const Label = styled.span`\n  margin-left: 10px;\n`;\n\nexport const MainWrapper = styled.div`\n  margin-bottom: 100px;\n\n  @media (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n\n  @media (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  @media (min-width: 768px) {\n    margin-left: 50px;\n  }\n`;\n\nexport const TitleWrapper = styled.div`\n  margin-bottom: 30px;\n\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  color: ${accentTextColor};\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) {\n    font-size: 25px;\n    margin-bottom: 0;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 50px;\n    margin-bottom: 0;\n  }\n`;\n\nexport const ReleaseDate = styled.p`\n  font-weight: 700;\n  font-size: 15px;\n\n  @media (min-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const GenresList = styled.ul`\n  margin-bottom: 50px;\n\n  @media (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const GenresItem = styled.li`\n  font-weight: 700;\n  font-size: 15px;\n  margin-right: 15px;\n\n  :last-child {\n    margin-right: 0;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Description = styled.p`\n  line-height: 2;\n  font-size: 15px;\n  margin-bottom: 50px;\n\n  @media (min-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const VoteWrapper = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const VoteAverage = styled.p`\n  font-size: 18px;\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const VoteCount = styled.p`\n  font-size: 18px;\n`;\n\nexport const Value = styled.span`\n  font-weight: 700;\n`;\n\nexport const AdditionalWrapper = styled.div``;\n\nexport const AdditionalTitle = styled.p`\n  text-transform: uppercase;\n  background-color: ${accentBgColor};\n  color: ${secondTextColor};\n  padding: 15px;\n  margin-bottom: 30px;\n`;\n\nexport const NavigationsList = styled.ul``;\n\nexport const NavigationsItem = styled.li`\n  margin-bottom: 15px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const CustomLink = styled(NavLink)`\n  font-size: 18px;\n  color: ${mainTextColor};\n\n  &.active {\n    color: ${accentTextColor};\n  }\n`;\n","import { useLocation, useNavigate } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport posterBg from '../../utilities/images/poster.png';\nimport Container from 'components/Container/Container';\nimport {\n  ButtonGoBack,\n  Label,\n  MainWrapper,\n  Poster,\n  InfoWrapper,\n  TitleWrapper,\n  Title,\n  ReleaseDate,\n  GenresList,\n  GenresItem,\n  Description,\n  VoteWrapper,\n  VoteAverage,\n  VoteCount,\n  Value,\n  AdditionalWrapper,\n  AdditionalTitle,\n  NavigationsList,\n  NavigationsItem,\n  CustomLink,\n} from './MovieDetails.styled';\nimport { FaChevronRight, FaChevronLeft } from 'react-icons/fa';\n\nconst MovieDetails = ({ movieInfo }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const subLocation = location.state.from;\n\n  const { title, genres, description, poster, releaseDate, voteAverage, voteCount } = movieInfo;\n\n  const onGoBack = () => navigate(location?.state?.from ?? '/');\n\n  return (\n    <Container>\n      <ButtonGoBack type=\"button\" onClick={onGoBack}>\n        <FaChevronLeft />\n        <Label>Go back</Label>\n      </ButtonGoBack>\n\n      <MainWrapper>\n        <Poster src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : posterBg} alt={title} />\n        <InfoWrapper>\n          <TitleWrapper>\n            <Title>{title}</Title>\n            <ReleaseDate>release: {releaseDate}</ReleaseDate>\n          </TitleWrapper>\n          <GenresList>\n            уйл дсгэгод выпуск\n            {genres && genres.map(({ name, id }) => <GenresItem key={id}>{name}</GenresItem>)}\n          </GenresList>\n          <Description>{description}</Description>\n          <VoteWrapper>\n            <VoteAverage>\n              Vote average: <Value>{voteAverage}</Value>\n            </VoteAverage>\n            <VoteCount>\n              Vote count: <Value>{voteCount}</Value>\n            </VoteCount>\n          </VoteWrapper>\n        </InfoWrapper>\n      </MainWrapper>\n\n      <AdditionalWrapper>\n        <AdditionalTitle>Additional Information</AdditionalTitle>\n        <NavigationsList>\n          <NavigationsItem>\n            <CustomLink to=\"cast\" state={{ from: subLocation }}>\n              <FaChevronRight /> Cast\n            </CustomLink>\n          </NavigationsItem>\n          <NavigationsItem>\n            <CustomLink to=\"reviews\" state={{ from: subLocation }}>\n              <FaChevronRight /> Reviews\n            </CustomLink>\n          </NavigationsItem>\n        </NavigationsList>\n      </AdditionalWrapper>\n    </Container>\n  );\n};\n\nMovieDetails.prototype = {\n  movieInfo: propTypes.shape({\n    title: propTypes.string,\n    genres: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number,\n        name: propTypes.string,\n      })\n    ),\n    description: propTypes.string,\n    poster: propTypes.string,\n    releaseDate: propTypes.string,\n    voteAverage: propTypes.number,\n    voteCount: propTypes.number,\n  }),\n};\n\nexport default MovieDetails;\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, Routes, Route } from 'react-router-dom';\nimport getMovieDetailsApi from 'API/getMovieDetailsApi';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = lazy(() => import('./Cast.js'));\nconst Reviews = lazy(() => import('./Reviews.js'));\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    getMovieDetailsApi(movieId).then(\n      ({\n        original_title,\n        genres,\n        overview,\n        poster_path,\n        release_date,\n        vote_average,\n        vote_count,\n      }) => {\n        const movieInfo = {\n          title: original_title,\n          genres: genres,\n          description: overview,\n          poster: poster_path,\n          releaseDate: Number.parseInt(release_date),\n          voteAverage: vote_average?.toFixed(2),\n          voteCount: vote_count,\n        };\n\n        return setMovieInfo(movieInfo);\n      }\n    );\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo && <MovieDetails movieInfo={movieInfo} />}\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["getMovieDetailsApi","movieId","url","filter","fetch","response","json","data","ButtonGoBack","styled","secondBgColor","secondTextColor","mainHoverEfect","accentBgColor","Label","MainWrapper","Poster","InfoWrapper","TitleWrapper","Title","accentTextColor","ReleaseDate","GenresList","GenresItem","Description","VoteWrapper","VoteAverage","VoteCount","Value","AdditionalWrapper","AdditionalTitle","NavigationsList","NavigationsItem","CustomLink","NavLink","mainTextColor","MovieDetails","movieInfo","location","useLocation","navigate","useNavigate","subLocation","state","from","title","genres","description","poster","releaseDate","voteAverage","voteCount","Container","type","onClick","src","posterBg","alt","map","name","id","to","prototype","propTypes","Cast","lazy","Reviews","useParams","useState","setMovieInfo","useEffect","then","original_title","overview","poster_path","release_date","vote_average","vote_count","Number","parseInt","toFixed","Suspense","fallback","Loader","path","element"],"sourceRoot":""}