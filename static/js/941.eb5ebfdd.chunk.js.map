{"version":3,"file":"static/js/941.eb5ebfdd.chunk.js","mappings":"qPAAMA,EAAkB,mCAAG,WAAMC,GAAN,mFACb,mCACNC,EAFmB,6CAEyBD,EAFzB,YAGnBE,EAHmB,mBACb,mCADa,4BAKFC,MAAM,GAAD,OAAIF,GAAJ,OAAUC,IALb,cAKnBE,EALmB,gBAMNA,EAASC,OANH,cAMnBC,EANmB,yBAQlBA,GARkB,4CAAH,sDAWxB,I,6DCRaC,EAAOC,EAAAA,EAAAA,GAAH,gFAMJC,EAAOD,EAAAA,EAAAA,GAAH,gFAKJE,EAAeF,EAAAA,EAAAA,IAAH,4GAOZG,EAAQH,EAAAA,EAAAA,IAAH,yCAILI,EAAOJ,EAAAA,EAAAA,EAAH,+EAGNK,EAAAA,I,SCvBLC,EAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,SAACC,EAAA,EAAD,CAAWC,WAAS,EAApB,UACE,SAACV,EAAD,UACGQ,EAAOG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACE,UAACZ,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEW,IAAKD,EAAK,0CAAsCA,GAAUE,EAC1DC,IAAKJ,OAGT,SAACR,EAAD,UAAOQ,MAPED,WAgBvBL,EAASW,UAAY,CACnBV,OAAQW,IAAAA,QACNA,IAAAA,MAAgB,CACdP,GAAIO,IAAAA,OACJN,KAAMM,IAAAA,OACNL,MAAOK,IAAAA,UAETC,YAGJ,QCLA,EA3Ba,WACX,IAAQ3B,GAAY4B,EAAAA,EAAAA,MAAZ5B,QACR,GAA4B6B,EAAAA,EAAAA,UAAS,MAArC,eAAOd,EAAP,KAAee,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACRhC,EAAmBC,GAChBgC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACDC,EAAY,GAEd,OAAJD,QAAI,IAAJA,GAAAA,EAAMf,KAAI,YAAiC,IACnCiB,EAAQ,CACZhB,GAFsC,EAA7BA,GAGTC,KAHsC,EAAzBA,KAIbC,MAJsC,EAAnBe,cAOrB,OAAOF,EAAUG,KAAKF,MAGxBL,EAAUI,MAEXI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACvC,IAEGe,IAAU,SAAC,EAAD,CAAUA,OAAQA,M","sources":["API/getMovieCreditsApi.js","components/CastList/CastList.styled.js","components/CastList/CastList.jsx","pages/CastPage.js"],"sourcesContent":["const getMovieCreditsApi = async movieId => {\n  const key = '32abbe5f20cc57659aefd6abb0b04352';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const filter = `?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n\nexport default getMovieCreditsApi;\n","import styled from '@emotion/styled';\nimport { accentTextColor } from 'utilities/variables/css';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: -10px;\n`;\n\nexport const Item = styled.li`\n  width: calc((100% - 10px * 8) / 4);\n  margin: 10px;\n`;\n\nexport const PhotoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 375px;\n  margin-bottom: 15px;\n`;\n\nexport const Photo = styled.img`\n  width: 230px;\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n  color: ${accentTextColor};\n`;\n","import propTypes from 'prop-types';\nimport actorBg from '../../utilities/images/actor.jpg';\nimport Container from 'components/Container/Container';\nimport { List, Item, PhotoWrapper, Photo, Name } from './CastList.styled';\n\nconst CastList = ({ actors }) => {\n  return (\n    <Container isPadding>\n      <List>\n        {actors.map(({ id, name, photo }) => {\n          return (\n            <Item key={id}>\n              <PhotoWrapper>\n                <Photo\n                  src={photo ? `https://image.tmdb.org/t/p/w500/${photo}` : actorBg}\n                  alt={name}\n                />\n              </PhotoWrapper>\n              <Name>{name}</Name>\n            </Item>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\n\nCastList.prototype = {\n  actors: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      name: propTypes.string,\n      photo: propTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default CastList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovieCreditsApi from 'API/getMovieCreditsApi';\nimport CastList from 'components/CastList/CastList';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    getMovieCreditsApi(movieId)\n      .then(({ cast }) => {\n        const actorsArr = [];\n\n        cast?.map(({ id, name, profile_path }) => {\n          const actor = {\n            id,\n            name,\n            photo: profile_path,\n          };\n\n          return actorsArr.push(actor);\n        });\n\n        setActors(actorsArr);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return actors && <CastList actors={actors} />;\n};\n\nexport default Cast;\n"],"names":["getMovieCreditsApi","movieId","url","filter","fetch","response","json","data","List","styled","Item","PhotoWrapper","Photo","Name","accentTextColor","CastList","actors","Container","isPadding","map","id","name","photo","src","actorBg","alt","prototype","propTypes","isRequired","useParams","useState","setActors","useEffect","then","cast","actorsArr","actor","profile_path","push","catch","err","console","log"],"sourceRoot":""}